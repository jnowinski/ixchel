{
  "_from": "slack-mock",
  "_id": "slack-mock@1.1.1",
  "_inBundle": false,
  "_integrity": "sha512-W+m6+vnf4QFT2OwytS6GKy4WTsaIyAi4W8YGg/ms4iHWfrbt+tP2nPPpLgb2xWucekEmGzhnNvc1IWpD6dStDg==",
  "_location": "/slack-mock",
  "_phantomChildren": {},
  "_requested": {
    "type": "tag",
    "registry": true,
    "raw": "slack-mock",
    "name": "slack-mock",
    "escapedName": "slack-mock",
    "rawSpec": "",
    "saveSpec": null,
    "fetchSpec": "latest"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/slack-mock/-/slack-mock-1.1.1.tgz",
  "_shasum": "d794332b705d3641985e3665fd4282eae17ac171",
  "_spec": "slack-mock",
  "_where": "D:\\owncloud\\code\\ixchel\\test",
  "author": "",
  "bugs": {
    "url": "https://github.com/Skellington-Closet/slack-mock/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "express": "^4.14.0",
    "nock": "^9.0.2",
    "qs": "^6.3.0",
    "request": "^2.79.0",
    "winston": "^2.3.0",
    "ws": "^1.1.1"
  },
  "deprecated": false,
  "description": "Slack API mocker",
  "devDependencies": {
    "body-parser": "^1.15.2",
    "chai": "^3.5.0",
    "coveralls": "^2.11.15",
    "delay": "^1.3.1",
    "istanbul": "^0.4.5",
    "mocha": "^3.2.0",
    "proxyquire": "^1.7.10",
    "sinon": "^1.17.6",
    "sinon-chai": "^2.8.0",
    "standard": "^8.5.0"
  },
  "engines": {
    "node": ">=6.0.0"
  },
  "homepage": "https://github.com/Skellington-Closet/slack-mock#readme",
  "license": "MIT",
  "main": "index.js",
  "name": "slack-mock",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Skellington-Closet/slack-mock.git"
  },
  "scripts": {
    "ci": "npm test && cat ./coverage/lcov.info | coveralls",
    "examples": "cross-env SLACK_TOKEN='single-team-1' mocha --recursive ./examples/test/ ",
    "pretest": "standard index.js src/*.js src/**/*.js test/*.js test/**/*.js examples/**/*.js --fix",
    "test": "istanbul cover --report lcov --dir ./coverage/ _mocha --recursive ./test/ --grep ./test/**/*.spec.js -- --colors --reporter spec"
  },
  "standard": {
    "globals": [
      "after",
      "afterEach",
      "before",
      "beforeEach",
      "describe",
      "it"
    ]
  },
  "version": "1.1.1"
}
